services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: fitbeast-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fitbeast
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fitbeast-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Python-парсер для заполнения базы данных
  parser:
    build:
      context: ./parser
      dockerfile: Dockerfile
    container_name: fitbeast-parser
    volumes:
      - ./parser:/app
      - ./parsed_data:/app/parsed_data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fitbeast-network
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: fitbeast
    restart: "no"
    command: >
      sh -c "python parser.py && python db_init.py --host=postgres --user=postgres --password=postgres --database=fitbeast --sample-data"

  # Node.js бэкенд
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fitbeast-backend
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      parser:
        condition: service_completed_successfully
    networks:
      - fitbeast-network
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: fitbeast
      PORT: 3000
    restart: unless-stopped

  # Vue.js фронтенд
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fitbeast-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - fitbeast-network
    env_file:
      - ./frontend/.env
    restart: unless-stopped

# Сеть для коммуникации контейнеров
networks:
  fitbeast-network:
    driver: bridge

# Постоянное хранилище для базы данных
volumes:
  postgres_data: